apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  labels:
    name: mongo-headless
spec:
  type: LoadBalancer
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    role: mongo

---

# stateful set config for mongo
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
      matchLabels:
        role: mongo
        environment: production
  serviceName: "mongo-headless"
  replicas: 3
  template:
    metadata:
      labels:
        role: mongo
        environment: production
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          command: ["/bin/sh","-c"]
          args: ["echo 2J2W5Jm7G38y169r8s5T1dW > mongo.key; chmod 600 mongo.key; mongod --replSet zemuldo --keyFile mongo.key --auth --bind_ip_all"]

          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: mongo-persistent-storage
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "longhorn"
      resources:
        requests:
          storage: 5Gi
---


apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo-backup-primary
  name: mongo-backup-primary
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo-backup-primary
    spec:
      containers:
      - image: tutum/mongodb-backup
        name: mongodb-backup
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        env:
        - name: MAX_BACKUPS
          value: "15"
        - name: MONGODB_USER
          value: "admin"
        - name: MONGODB_PASS
          value: "372b60f4-704c-4205-8e5c-45cdbf44b1fc"
        - name: MONGODB_HOST
          value: "mongo-0.mongo-headless.default.svc.cluster.local"
        - name: MONGODB_PORT
          value: "27017"
        volumeMounts:
            - name: mongo-backup
              mountPath: /backup
      volumes:
        - name: mongo-backup
          persistentVolumeClaim:
            claimName: mongo-backup-pvc
---

apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo-backup-secondary
  name: mongo-backup-secondary
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo-backup-secondary
    spec:
      containers:
      - image: tutum/mongodb-backup
        name: mongodb-backup
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        env:
        - name: MAX_BACKUPS
          value: "15"
        - name: MONGODB_USER
          value: "admin"
        - name: MONGODB_PASS
          value: "372b60f4-704c-4205-8e5c-45cdbf44b1fc"
        - name: MONGODB_HOST
          value: "mongo-0.mongo-headless.default.svc.cluster.local"
        - name: MONGODB_PORT
          value: "27017"
        volumeMounts:
            - name: mongo-backup
              mountPath: /backup
      volumes:
        - name: mongo-backup
          persistentVolumeClaim:
            claimName: mongo-secondary-backup-pvc
---